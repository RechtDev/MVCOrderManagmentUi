// <auto-generated />
using System;
using MVCOrderManagmentUi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCOrderManagmentUi.Migrations
{
    [DbContext(typeof(GSparkShopDBContext))]
    partial class GSparkShopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCOrderManagmentUi.Models.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prod_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prod_name");

                    b.Property<decimal>("ProdPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("prod_price");

                    b.Property<string>("ProdType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("prod_type");

                    b.HasKey("ProdId")
                        .HasName("PK__PRODUCTS__56958AB29A69EB3E");

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("MVCOrderManagmentUi.Models.ShoppingCart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CartName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cart_name");

                    b.HasKey("CartId")
                        .HasName("PK__Shopping__2EF52A27390804F9");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("MVCOrderManagmentUi.Models.ShoppingCartContent", b =>
                {
                    b.Property<int>("ShoppingCartContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("prod_id");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int")
                        .HasColumnName("shoppingCart_id");

                    b.HasKey("ShoppingCartContentID")
                        .HasName("PK__ShoppingC__shopp__2982930DB");

                    b.HasIndex("ProdId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCart_Contents");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUsers");
                });

            modelBuilder.Entity("MVCOrderManagmentUi.Models.ShoppingCartContent", b =>
                {
                    b.HasOne("MVCOrderManagmentUi.Models.Product", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK__ShoppingC__prod___276EDEB3");

                    b.HasOne("MVCOrderManagmentUi.Models.ShoppingCart", "ShoppingCart")
                        .WithMany()
                        .HasForeignKey("ShoppingCartId")
                        .HasConstraintName("FK__ShoppingC__shopp__286302EC");

                    b.Navigation("Prod");

                    b.Navigation("ShoppingCart");
                });
#pragma warning restore 612, 618
        }
    }
}
